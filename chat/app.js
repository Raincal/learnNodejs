// Generated by CoffeeScript 1.9.3
(function() {
  var app, express, io, path, roomInfo, router, server, socketIO;

  express = require('express');

  path = require('path');

  io = require('socket.io');

  router = express.Router();

  app = express();

  server = require('http').Server(app);

  app.use(express["static"](path.join(__dirname, 'public')));

  app.set('views', path.join(__dirname, 'views'));

  app.set('view engine', 'ejs');

  socketIO = io(server);

  roomInfo = {};

  socketIO.on('connection', function(socket) {
    var roomID, splited, url, user;
    url = socket.request.headers.referer;
    splited = url.split('/');
    roomID = splited[splited.length - 1];
    user = '';
    socket.on('join', function(username) {
      user = username;
      if (!roomInfo[roomID]) {
        roomInfo[roomID] = [];
      }
      roomInfo[roomID].push(user);
      socket.join(roomID);
      socketIO.to(roomID).emit('sys', user + '加入了房间', roomInfo[roomID]);
      return console.log(user + '加入了房间' + roomID);
    });
    socket.on('leave', function() {
      return socket.emit('disconnect');
    });
    socket.on('disconnect', function() {
      var index;
      index = roomInfo[roomID].indexOf(user);
      if (index !== -1) {
        roomInfo[roomID].splice(index, 1);
      }
      socket.leave(roomID);
      socketIO.to(roomID).emit('sys', user + '退出了房间', roomInfo[roomID]);
      return console.log(user + '退出了房间' + roomID);
    });
    return socket.on('message', function(msg) {
      if (roomInfo[roomID].indexOf(user) === -1) {
        return false;
      }
      return socketIO.to(roomID).emit('msg', user, msg);
    });
  });

  router.get('/room/:roomID', function(req, res) {
    var roomID;
    roomID = req.params.roomID;
    return res.render('room', {
      roomID: roomID,
      users: roomInfo[roomID]
    });
  });

  app.use('/', router);

  server.listen(3000, function() {
    return console.log('server listening on port 3000');
  });

}).call(this);

//# sourceMappingURL=app.js.map
