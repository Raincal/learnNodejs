// Generated by CoffeeScript 1.9.3
(function() {
  var age, ages, child, countdown, courses, dish, filename, fn, food, foods, i, j, k, l, len, len1, len2, len3, lyrics, m, num, ref, yearsOld;

  ref = ["fish", "meat", "vegetable"];
  for (j = 0, len = ref.length; j < len; j++) {
    food = ref[j];
    eat(food);
  }

  courses = ['greens', 'caviar', 'truffles', 'roast', 'cake'];

  for (i = k = 0, len1 = courses.length; k < len1; i = ++k) {
    dish = courses[i];
    menu(i + 1, dish);
  }

  foods = ['broccoli', 'spinach', 'chocolate'];

  for (l = 0, len2 = foods.length; l < len2; l++) {
    food = foods[l];
    if (food !== "chocolates") {
      eat(food);
    }
  }

  countdown = (function() {
    var m, results;
    results = [];
    for (num = m = 10; m >= 1; num = --m) {
      results.push(num);
    }
    return results;
  })();

  yearsOld = {
    max: 10,
    ida: 9,
    tim: 11
  };

  ages = (function() {
    var results;
    results = [];
    for (child in yearsOld) {
      age = yearsOld[child];
      results.push(child + " is " + age);
    }
    return results;
  })();

  if (this.studyingEconomics) {
    while (supply > demand) {
      buy();
    }
    while (!(supply < demand)) {
      sell();
    }
  }

  num = 10;

  lyrics = (function() {
    var results;
    results = [];
    while (num -= 1) {
      results.push(num + " little monkeys, jumping on the bed. One fell out and bumped his head.");
    }
    return results;
  })();

  fn = function(filename) {
    return fs.readFile(filename, function(err, contents) {
      return compile(filename, contents.toString());
    });
  };
  for (m = 0, len3 = list.length; m < len3; m++) {
    filename = list[m];
    fn(filename);
  }

}).call(this);

//# sourceMappingURL=循环和推导式.js.map
